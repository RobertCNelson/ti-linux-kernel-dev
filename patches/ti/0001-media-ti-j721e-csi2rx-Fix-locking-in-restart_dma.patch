From d23b3d303a07057885900044db53102bd746703a Mon Sep 17 00:00:00 2001
From: Jai Luthra <j-luthra@ti.com>
Date: Wed, 21 Feb 2024 13:53:00 +0530
Subject: [PATCH 01/27] media: ti: j721e-csi2rx: Fix locking in restart_dma

After the frame is submitted to DMA, it may happen that the submitted
list is not updated soon enough, and the DMA callback is triggered
before that. This can lead to kernel crashes, so move everything in a
single lock/unlock section to prevent such races.

Fixes: b93eb4cf5ccb ("media: ti: j721e-csi2rx: Submit all available buffers")
Signed-off-by: Jai Luthra <j-luthra@ti.com>
Reviewed-by: Kamlesh Gurudasani <kamlesh@ti.com>
---
 drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c b/drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c
index 11bf5edd2ec6..6c0a33a83dcb 100644
--- a/drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c
+++ b/drivers/media/platform/ti/j721e-csi2rx/j721e-csi2rx.c
@@ -825,15 +825,14 @@ static int ti_csi2rx_restart_dma(struct ti_csi2rx_ctx *ctx,
 		dev_warn(ctx->csi->dev,
 			 "Failed to drain DMA. Next frame might be bogus\n");
 
+	spin_lock_irqsave(&dma->lock, flags);
 	ret = ti_csi2rx_start_dma(ctx, buf);
 	if (ret) {
-		dev_err(ctx->csi->dev, "Failed to start DMA: %d\n", ret);
-		spin_lock_irqsave(&dma->lock, flags);
 		vb2_buffer_done(&buf->vb.vb2_buf, VB2_BUF_STATE_ERROR);
 		dma->state = TI_CSI2RX_DMA_IDLE;
 		spin_unlock_irqrestore(&dma->lock, flags);
+		dev_err(ctx->csi->dev, "Failed to start DMA: %d\n", ret);
 	} else {
-		spin_lock_irqsave(&dma->lock, flags);
 		list_add_tail(&buf->list, &dma->submitted);
 		spin_unlock_irqrestore(&dma->lock, flags);
 	}
-- 
2.39.2

