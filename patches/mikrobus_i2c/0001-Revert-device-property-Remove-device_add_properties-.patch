From 74786861ffdc595210f83af3db4e4c5038a28794 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Tue, 27 Feb 2024 17:01:57 -0600
Subject: [PATCH 1/4] Revert "device property: Remove device_add_properties()
 API"

This reverts commit 2338e7bcef445059a99848a3eddde0b556277663.
---
 drivers/base/property.c  | 48 ++++++++++++++++++++++++++++++++++++++++
 include/linux/property.h |  4 ++++
 2 files changed, 52 insertions(+)

diff --git a/drivers/base/property.c b/drivers/base/property.c
index b0c40d973484..0999f8247ed3 100644
--- a/drivers/base/property.c
+++ b/drivers/base/property.c
@@ -562,6 +562,54 @@ struct fwnode_handle *fwnode_find_reference(const struct fwnode_handle *fwnode,
 }
 EXPORT_SYMBOL_GPL(fwnode_find_reference);
 
+/**
+ * device_remove_properties - Remove properties from a device object.
+ * @dev: Device whose properties to remove.
+ *
+ * The function removes properties previously associated to the device
+ * firmware node with device_add_properties(). Memory allocated to the
+ * properties will also be released.
+ */
+void device_remove_properties(struct device *dev)
+{
+	struct fwnode_handle *fwnode = dev_fwnode(dev);
+
+	if (!fwnode)
+		return;
+
+	if (is_software_node(fwnode->secondary)) {
+		fwnode_remove_software_node(fwnode->secondary);
+		set_secondary_fwnode(dev, NULL);
+	}
+}
+EXPORT_SYMBOL_GPL(device_remove_properties);
+
+/**
+ * device_add_properties - Add a collection of properties to a device object.
+ * @dev: Device to add properties to.
+ * @properties: Collection of properties to add.
+ *
+ * Associate a collection of device properties represented by @properties with
+ * @dev. The function takes a copy of @properties.
+ *
+ * WARNING: The callers should not use this function if it is known that there
+ * is no real firmware node associated with @dev! In that case the callers
+ * should create a software node and assign it to @dev directly.
+ */
+int device_add_properties(struct device *dev,
+			  const struct property_entry *properties)
+{
+	struct fwnode_handle *fwnode;
+
+	fwnode = fwnode_create_software_node(properties, NULL);
+	if (IS_ERR(fwnode))
+		return PTR_ERR(fwnode);
+
+	set_secondary_fwnode(dev, fwnode);
+	return 0;
+}
+EXPORT_SYMBOL_GPL(device_add_properties);
+
 /**
  * fwnode_get_name - Return the name of a node
  * @fwnode: The firmware node
diff --git a/include/linux/property.h b/include/linux/property.h
index 117cc200c656..e0edcbc4d89d 100644
--- a/include/linux/property.h
+++ b/include/linux/property.h
@@ -383,6 +383,10 @@ property_entries_dup(const struct property_entry *properties);
 
 void property_entries_free(const struct property_entry *properties);
 
+int device_add_properties(struct device *dev,
+			  const struct property_entry *properties);
+void device_remove_properties(struct device *dev);
+
 bool device_dma_supported(struct device *dev);
 
 enum dev_dma_attr device_get_dma_attr(struct device *dev);
-- 
2.39.2

